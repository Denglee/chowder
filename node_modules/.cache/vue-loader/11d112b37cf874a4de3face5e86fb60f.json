{"remainingRequest":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\chowder\\src\\views\\Index\\index.vue?vue&type=template&id=c05bd2ea&scoped=true&","dependencies":[{"path":"E:\\project\\chowder\\src\\views\\Index\\index.vue","mtime":1578365478269},{"path":"E:\\project\\chowder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}