{"remainingRequest":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\chowder\\src\\views\\Reception\\Receptionindex.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\project\\chowder\\src\\views\\Reception\\Receptionindex.vue","mtime":1578297864418},{"path":"E:\\project\\chowder\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZCB7CiAgICBib3JkZXI6IDFweCBkYXNoZWQgI2Q5ZDlkOTsKICAgIGJvcmRlci1yYWRpdXM6IDZweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIG92ZXJmbG93OiBoaWRkZW47Cn0KLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkOmhvdmVyIHsKICAgIGJvcmRlci1jb2xvcjogIzQwOWVmZjsKfQouYXZhdGFyLXVwbG9hZGVyLWljb24gewogICAgY29sb3I6ICM4YzkzOWQ7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLmF2YXRhciB7CiAgICBkaXNwbGF5OiBibG9jazsKfQoucmV1cGxvYWQgewogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgY29sb3I6ICNmZmY7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwOwogICAgb3BhY2l0eTogMC42OwogICAgdG9wOiA1MCU7CiAgICBsZWZ0OiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICAgIGRpc3BsYXk6IG5vbmU7Cn0KI3VwbG9hZEljb257CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDUwJTsKICAgIGxlZnQ6IDUwJTsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogICAgZGlzcGxheTogbm9uZTsKfQo="},{"version":3,"sources":["Receptionindex.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Receptionindex.vue","sourceRoot":"src/views/Reception","sourcesContent":["<template>\r\n    <div>\r\n        <!-- 多图片上传 -->\r\n        <el-upload v-if=\"multiple\" action='string' list-type=\"picture-card\" accept=\"image/*\" :on-preview=\"handlePreview\"\r\n                   :auto-upload=\"false\" :on-remove=\"handleRemove\"\r\n                   :http-request=\"upload\" :on-change=\"consoleFL\" :file-list=\"uploadList\">\r\n            <i class=\"el-icon-plus\"></i>\r\n        </el-upload>\r\n\r\n        <!-- 单图片上传 -->\r\n        <el-upload v-else class=\"avatar-uploader\" action=\"'string'\" :auto-upload=\"false\" :show-file-list=\"false\" :on-change=\"handleCrop\"\r\n                   :http-request=\"upload\" list-type=\"picture\">\r\n            <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" ref=\"singleImg\"\r\n                 @mouseenter=\"mouseEnter\" @mouseleave=\"mouseLeave\" :style=\"{width:width+'px',height:height+'px'}\">\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\" :style=\"{width:width+'px',height:height+'px',\r\n            'line-height':height+'px','font-size':height/6+'px'}\"></i>\r\n            <!-- 单图片上传状态显示 -->\r\n            <!-- <div v-if=\"imageUrl\" class=\"reupload\" ref=\"reupload\" @click.stop=\"handlePreviewSingle\" @mouseenter=\"mouseEnter\" @mouseleave=\"mouseLeave\" :style=\"{width:reuploadWidth+'px',height:reuploadWidth+'px','line-height':reuploadWidth+'px','font-size':reuploadWidth/5+'px'}\">重新上传</div> -->\r\n            <div id=\"uploadIcon\" v-if=\"imageUrl\" ref=\"reupload\" @mouseenter=\"mouseEnter\" @mouseleave=\"mouseLeave\" :style=\"{width:'100%'}\">\r\n                <i class=\"el-icon-zoom-in\" @click.stop=\"handlePreviewSingle\" :style=\"{color:'#2E2E2E',fontSize:'25px',\r\n                display:'inline-block',paddingRight:'15px'}\"></i>\r\n                <i class=\"el-icon-upload\" :style=\"{color:'#2E2E2E',fontSize:'25px',display:'inline-block'}\"></i>\r\n            </div>\r\n            <div class=\"reupload\" ref=\"uploading\" :style=\"{width:reuploadWidth+'px',height:reuploadWidth+'px',\r\n            'line-height':reuploadWidth+'px','font-size':reuploadWidth/5+'px'}\">上传中..</div>\r\n            <div class=\"reupload\" ref=\"failUpload\" :style=\"{width:reuploadWidth+'px',height:reuploadWidth+'px',\r\n            'line-height':reuploadWidth+'px','font-size':reuploadWidth/5+'px'}\">上传失败</div>\r\n        </el-upload>\r\n\r\n        <!-- 多图片预览弹窗 -->\r\n        <el-dialog :visible.sync=\"dialogVisible\">\r\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\r\n        </el-dialog>\r\n\r\n        <!-- 剪裁组件弹窗 -->\r\n        <el-dialog :visible.sync=\"cropperModel\" width=\"1100px\" :before-close=\"beforeClose\">\r\n            <Cropper :img-file=\"file\" ref=\"vueCropper\" :fixedNumber=\"fixedNumber\" @upload=\"upload\">\r\n            </Cropper>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Cropper from '@/components/cropper/cropper';\r\n    // import Api from '@/js/api.js' //接口url配置文件\r\n\r\n    export default {\r\n        name:'Receptionindex',\r\n\r\n        props: {\r\n            targetUrl: {\r\n                // 上传地址\r\n                type: String,\r\n                // default: '/storage/upload'\r\n                default: `${process.env.API_ROOT}/sys/oss/upload`\r\n            },\r\n            multiple: {\r\n                // 多图开关\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            initUrl: {\r\n                // 初始图片链接\r\n                default: ''\r\n            },\r\n            fixedNumber: {\r\n                // 剪裁框比例设置\r\n                default: function () {\r\n                    return [1.5, 1];\r\n                }\r\n            },\r\n            width: {\r\n                // 单图剪裁框宽度\r\n                type: Number,\r\n                default: 178\r\n            },\r\n            height: {\r\n                // 单图剪裁框高度\r\n                type: Number,\r\n                default: 178\r\n            }\r\n        },\r\n        data () {\r\n            return {\r\n                file: '', // 当前被选择的图片文件\r\n                imageUrl: '', // 单图情况框内图片链接\r\n                dialogImageUrl: '', // 多图情况弹窗内图片链接\r\n                uploadList: [], // 上传图片列表\r\n                reupload: true, // 控制\"重新上传\"开关\r\n                dialogVisible: false, // 展示弹窗开关\r\n                cropperModel: false, // 剪裁组件弹窗开关\r\n                reuploadWidth: this.height * 0.7, // 动态改变”重新上传“大小\r\n            };\r\n        },\r\n        updated () {\r\n            if (this.$refs.vueCropper) {\r\n                this.$refs.vueCropper.Update();\r\n            }\r\n        },\r\n        watch: {\r\n            initUrl: function (val) {\r\n                console.log(val);\r\n                // 监听传入初始化图片\r\n                // console.info('watch');\r\n                if (val) {\r\n                    if (typeof this.initUrl === 'string') {\r\n                        this.imageUrl = val;\r\n                    } else {\r\n                        this.uploadList = this.formatImgArr(val);\r\n                        // this.$emit('imgupload', this.uploadList);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        mounted () {\r\n            if (typeof this.initUrl === 'string') {\r\n                this.imageUrl = this.initUrl;\r\n            } else {\r\n                this.uploadList = this.formatImgArr(this.initUrl);\r\n            }\r\n        },\r\n        methods: {\r\n            /** **************************** multiple多图情况 **************************************/\r\n            handlePreview (file) {\r\n                console.log(file);\r\n                // 点击进行图片展示\r\n                this.dialogImageUrl = file.url;\r\n                this.dialogVisible = true;\r\n            },\r\n            handleRemove (file, fileList) {\r\n                // 删除图片后更新图片文件列表并通知父级变化\r\n                this.uploadList = fileList;\r\n                this.$emit('imgupload', this.uploadList);\r\n                // this.$emit('imgupload', this.formatImgArr(this.uploadList));\r\n            },\r\n            consoleFL (file, fileList) {\r\n                console.log(file);\r\n                // 弹出剪裁框，将当前文件设置为文件\r\n                this.cropperModel = true;\r\n                this.file = file;\r\n                // this.uploadList = fileList;\r\n            },\r\n            /************************************************************************************/\r\n\r\n            /** **************************** single单图情况 **************************************/\r\n            handlePreviewSingle (file) { // 点击进行图片展示\r\n                console.log(file);\r\n                this.dialogImageUrl = this.file.url;\r\n                this.dialogVisible = true;\r\n            },\r\n            mouseEnter () { // 鼠标划入显示“重新上传”\r\n                this.$refs.reupload.style.display = 'block';\r\n                if (this.$refs.failUpload.style.display === 'block') {\r\n                    this.$refs.failUpload.style.display = 'none';\r\n                }\r\n                this.$refs.singleImg.style.opacity = '0.6';\r\n            },\r\n            mouseLeave () {\r\n                // 鼠标划出隐藏“重新上传”\r\n                this.$refs.reupload.style.display = 'none';\r\n                this.$refs.singleImg.style.opacity = '1';\r\n            },\r\n            handleCrop (file, files) {\r\n                console.log(file);\r\n                // 点击弹出剪裁框\r\n                this.cropperModel = true;\r\n                this.file = file;\r\n                // this.imageUrl = file.url\r\n            },\r\n            /************************************************************************************/\r\n\r\n            async upload (data) {\r\n                // 自定义upload事件\r\n                if (!this.multiple) {\r\n                    // 如果单图，则显示正在上传\r\n                    this.$refs.uploading.style.display = 'block';\r\n                }\r\n                let img = new Image();\r\n                img.src = data;\r\n                img.onload = async () => {\r\n                    // let _data = this.compress(img);\r\n                    let blob = this.dataURItoBlob(data);\r\n                    let formData = new FormData();\r\n                    formData.append('file', blob, this.file.name); // 有的后台需要传文件名，不然会报错\r\n                    this.imgUpload(formData);\r\n                };\r\n            },\r\n            async imgUpload(formData) {\r\n                const res = await this.$http({\r\n                    url: 'sys/oss/upload',\r\n                    method: 'post',\r\n                    data: formData,\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                if (!this.multiple) {\r\n                    // 上传完成后隐藏正在上传\r\n                    this.$refs.uploading.style.display = 'none';\r\n                }\r\n                if (res.data.code === 0) {\r\n                    // 上传成功将照片传回父组件\r\n                    const currentPic = res.data.url;\r\n                    if (this.multiple) {\r\n                        this.uploadList.push({\r\n                            url: currentPic,\r\n                            uid: '111'\r\n                        });\r\n                        this.$emit('imgupload', this.uploadList);// 根据自己实际项目需要将照片返回给父组件\r\n                        // this.uploadList.pop();\r\n                        // this.$emit('imgupload', this.formatImgArr(this.uploadList));\r\n                    } else {\r\n                        this.$emit('imgupload', currentPic);\r\n                    }\r\n                    this.$refs.vueCropper.isDisabled = false;\r\n                } else {\r\n                    // 上传失败则显示上传失败，如多图则从图片列表删除图片\r\n                    if (!this.multiple) {\r\n                        this.$refs.failUpload.style.display = 'block';\r\n                    } else {\r\n                        this.uploadList.pop();\r\n                    }\r\n                    this.$refs.vueCropper.isDisabled = false;\r\n                }\r\n                this.cropperModel = false;\r\n            },\r\n\r\n            formatImgArr (arr) {\r\n                const result = arr.map((item, index) => {\r\n                    if (typeof item === 'string') {\r\n                        return {\r\n                            url: item,\r\n                            uid: `index${index}`\r\n                        };\r\n                    } else {\r\n                        return item.url;\r\n                    }\r\n                });\r\n                return result;\r\n            },\r\n\r\n            beforeClose () {\r\n                // this.uploadList.pop();\r\n                console.log(this.uploadList);\r\n                this.cropperModel = false;\r\n            },\r\n\r\n            // 压缩图片\r\n            compress(img) {\r\n                let canvas = document.createElement('canvas');\r\n                let ctx = canvas.getContext('2d');\r\n                // let initSize = img.src.length;\r\n                let width = img.width;\r\n                let height = img.height;\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                // 铺底色\r\n                ctx.fillStyle = '#fff';\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n                ctx.drawImage(img, 0, 0, width, height);\r\n                // 进行压缩\r\n                let ndata = canvas.toDataURL('image/jpeg', 0.8);\r\n                return ndata;\r\n            },\r\n\r\n            // base64转成bolb对象\r\n            dataURItoBlob(base64Data) {\r\n                let byteString;\r\n                if (base64Data.split(',')[0].indexOf('base64') >= 0) { byteString = atob(base64Data.split(',')[1]); } else { byteString = unescape(base64Data.split(',')[1]); }\r\n                let mimeString = base64Data.split(',')[0].split(':')[1].split(';')[0];\r\n                let ia = new Uint8Array(byteString.length);\r\n                for (let i = 0; i < byteString.length; i++) {\r\n                    ia[i] = byteString.charCodeAt(i);\r\n                }\r\n                return new Blob([ia], { type: mimeString });\r\n            }\r\n        },\r\n        components: {\r\n            Cropper\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n    .avatar-uploader .el-upload {\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n    .avatar-uploader .el-upload:hover {\r\n        border-color: #409eff;\r\n    }\r\n    .avatar-uploader-icon {\r\n        color: #8c939d;\r\n        text-align: center;\r\n    }\r\n    .avatar {\r\n        display: block;\r\n    }\r\n    .reupload {\r\n        border-radius: 50%;\r\n        position: absolute;\r\n        color: #fff;\r\n        background-color: #000000;\r\n        opacity: 0.6;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        display: none;\r\n    }\r\n    #uploadIcon{\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        display: none;\r\n    }\r\n</style>"]}]}