{"remainingRequest":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\project\\chowder\\src\\components\\cropper\\cropper.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\project\\chowder\\src\\components\\cropper\\cropper.vue","mtime":1578296424483},{"path":"E:\\project\\chowder\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\project\\chowder\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY3JvcHBlci1jb250ZW50IHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwogICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwp9Ci5jcm9wcGVyLWNvbnRlbnQgLmNyb3BwZXIgewogICAgd2lkdGg6IDUwMHB4OwogICAgaGVpZ2h0OiA0MDBweDsKfQouY3JvcHBlci1jb250ZW50IC5zaG93LXByZXZpZXcgewogICAgZmxleDogMTsKICAgIC13ZWJraXQtZmxleDogMTsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYzsKICAgIGJhY2tncm91bmQ6ICNjY2NjY2M7CiAgICBtYXJnaW4tbGVmdDogNDBweDsKfQoucHJldmlldyB7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYzsKICAgIGJhY2tncm91bmQ6ICNjY2NjY2M7Cn0KLmZvb3Rlci1idG4gewogICAgbWFyZ2luLXRvcDogMzBweDsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwogICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwp9Ci5mb290ZXItYnRuIC5zY29wZS1idG4gewogICAgd2lkdGg6IDI1MHB4OwogICAgZGlzcGxheTogZmxleDsKICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwp9Ci5mb290ZXItYnRuIC51cGxvYWQtYnRuIHsKICAgIGZsZXg6IDE7CiAgICAtd2Via2l0LWZsZXg6IDE7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZGlzcGxheTogLXdlYmtpdC1mbGV4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyOwp9Ci5mb290ZXItYnRuIC5idG4gewogICAgb3V0bGluZTogbm9uZTsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIGxpbmUtaGVpZ2h0OiAxOwogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBvdXRsaW5lOiAwOwogICAgbWFyZ2luOiAwOwogICAgLXdlYmtpdC10cmFuc2l0aW9uOiAwLjFzOwogICAgdHJhbnNpdGlvbjogMC4xczsKICAgIGZvbnQtd2VpZ2h0OiA1MDA7CiAgICBwYWRkaW5nOiA4cHggMTVweDsKICAgIGZvbnQtc2l6ZTogMTJweDsKICAgIGJvcmRlci1yYWRpdXM6IDNweDsKICAgIGNvbG9yOiAjZmZmOwogICAgYmFja2dyb3VuZC1jb2xvcjogIzY3YzIzYTsKICAgIGJvcmRlci1jb2xvcjogIzY3YzIzYTsKfQo="},{"version":3,"sources":["cropper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cropper.vue","sourceRoot":"src/components/cropper","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"cropper-content\">\r\n            <!-- 剪裁框 -->\r\n            <div class=\"cropper\">\r\n                <vueCropper ref=\"cropper\" :img=\"option.img\" :outputSize=\"option.size\"\r\n                            :outputType=\"option.outputType\" :info=\"true\" :full=\"option.full\" :canMove=\"option.canMove\"\r\n                            :canMoveBox=\"option.canMoveBox\" :original=\"option.original\" :autoCrop=\"option.autoCrop\"\r\n                            :autoCropWidth=\"option.autoCropWidth\" :autoCropHeight=\"option.autoCropHeight\" :fixedBox=\"option.fixedBox\"\r\n                            @realTime=\"realTime\" :fixed=\"option.fixed\" :fixedNumber=\"fixedNumber\"></vueCropper>\r\n                <!-- <vueCropper ref=\"cropper\" :img=\"option.img\" :outputSize=\"option.size\" :outputType=\"option.outputType\"></vueCropper> -->\r\n            </div>\r\n            <!-- 预览框 -->\r\n            <div class=\"show-preview\" :style=\"{'width': '500px', 'height': '400px',\r\n            'overflow': 'hidden', 'margin': '0 25px', 'display':'flex', 'align-items' : 'center'}\">\r\n                <div :style=\"previews.div\" class=\"preview\">\r\n                    <img :src=\"previews.url\" :style=\"previews.img\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"footer-btn\">\r\n            <!-- 缩放旋转按钮 -->\r\n            <div class=\"scope-btn\">\r\n                <el-button type=\"primary\" icon=\"el-icon-zoom-in\" @click=\"changeScale(1)\"></el-button>\r\n                <el-button type=\"primary\" icon=\"el-icon-zoom-out\" @click=\"changeScale(-1)\"></el-button>\r\n                <el-button type=\"primary\" @click=\"rotateLeft\">逆时针旋转</el-button>\r\n                <el-button type=\"primary\" @click=\"rotateRight\">顺时针旋转</el-button>\r\n            </div>\r\n            <!-- 确认上传按钮 -->\r\n            <div class=\"upload-btn\">\r\n                <!-- <el-button type=\"primary\" @click=\"uploadImg('blob')\">上传</el-button> -->\r\n                <el-button type=\"primary\" :disabled=\"isDisabled\" @click=\"uploadImg('base64')\">上传</el-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    /*图片裁剪*/\r\n    import { VueCropper } from 'vue-cropper';\r\n    // console.log(VueCropper);\r\n    export default {\r\n        data () {\r\n            return {\r\n                previews: {}, // 预览数据\r\n                option: {\r\n                    img: '', // 裁剪图片的地址  (默认：空)\r\n                    outputSize: 1, // 裁剪生成图片的质量  (默认:1)\r\n                    full: false, // 是否输出原图比例的截图 选true生成的图片会非常大  (默认:false)\r\n                    outputType: 'png', // 裁剪生成图片的格式  (默认:jpg)\r\n                    canMove: true, // 上传图片是否可以移动  (默认:true)\r\n                    original: false, // 上传图片按照原始比例渲染  (默认:false)\r\n                    canMoveBox: true, // 截图框能否拖动  (默认:true)\r\n                    autoCrop: true, // 是否默认生成截图框  (默认:false)\r\n                    autoCropWidth: 480, // 默认生成截图框宽度  (默认:80%)\r\n                    autoCropHeight: 320, // 默认生成截图框高度  (默认:80%)\r\n                    fixedBox: false, // 固定截图框大小 不允许改变  (默认:false)\r\n                    fixed: true, // 是否开启截图框宽高固定比例  (默认:true)\r\n                    fixedNumber: [1.5, 1], // 截图框比例  (默认:[1:1])\r\n                    enlarge: 1\r\n                },\r\n                isDisabled: false,\r\n                downImg: '#'\r\n            };\r\n        },\r\n        props: ['imgFile', 'fixedNumber'],\r\n        methods: {\r\n            changeScale (num) {\r\n                // 图片缩放\r\n                num = num || 1;\r\n                this.$refs.cropper.changeScale(num);\r\n            },\r\n            rotateLeft () {\r\n                // 向左旋转\r\n                this.$refs.cropper.rotateLeft();\r\n            },\r\n            rotateRight () {\r\n                // 向右旋转\r\n                this.$refs.cropper.rotateRight();\r\n            },\r\n            Update () {\r\n                // this.file = this.imgFile\r\n                this.option.img = this.imgFile.url;\r\n            },\r\n            realTime (data) {\r\n                // 实时预览\r\n                this.previews = data;\r\n            },\r\n            uploadImg (type) {\r\n                // 将剪裁好的图片回传给父组件\r\n                event.preventDefault();\r\n                this.isDisabled = true;\r\n                let that = this;\r\n                if (type === 'blob') {\r\n                    this.$refs.cropper.getCropBlob(data => {\r\n                        that.$emit('upload', data);\r\n                    });\r\n                } else {\r\n                    this.$refs.cropper.getCropData(data => {\r\n                        that.$emit('upload', data);\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        components: { VueCropper }\r\n    };\r\n</script>\r\n<style>\r\n    .cropper-content {\r\n        display: flex;\r\n        display: -webkit-flex;\r\n        justify-content: flex-end;\r\n        -webkit-justify-content: flex-end;\r\n    }\r\n    .cropper-content .cropper {\r\n        width: 500px;\r\n        height: 400px;\r\n    }\r\n    .cropper-content .show-preview {\r\n        flex: 1;\r\n        -webkit-flex: 1;\r\n        display: flex;\r\n        display: -webkit-flex;\r\n        justify-content: center;\r\n        -webkit-justify-content: center;\r\n        overflow: hidden;\r\n        border: 1px solid #cccccc;\r\n        background: #cccccc;\r\n        margin-left: 40px;\r\n    }\r\n    .preview {\r\n        overflow: hidden;\r\n        border: 1px solid #cccccc;\r\n        background: #cccccc;\r\n    }\r\n    .footer-btn {\r\n        margin-top: 30px;\r\n        display: flex;\r\n        display: -webkit-flex;\r\n        justify-content: flex-end;\r\n        -webkit-justify-content: flex-end;\r\n    }\r\n    .footer-btn .scope-btn {\r\n        width: 250px;\r\n        display: flex;\r\n        display: -webkit-flex;\r\n        justify-content: space-between;\r\n        -webkit-justify-content: space-between;\r\n    }\r\n    .footer-btn .upload-btn {\r\n        flex: 1;\r\n        -webkit-flex: 1;\r\n        display: flex;\r\n        display: -webkit-flex;\r\n        justify-content: center;\r\n        -webkit-justify-content: center;\r\n    }\r\n    .footer-btn .btn {\r\n        outline: none;\r\n        display: inline-block;\r\n        line-height: 1;\r\n        white-space: nowrap;\r\n        cursor: pointer;\r\n        -webkit-appearance: none;\r\n        text-align: center;\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n        outline: 0;\r\n        margin: 0;\r\n        -webkit-transition: 0.1s;\r\n        transition: 0.1s;\r\n        font-weight: 500;\r\n        padding: 8px 15px;\r\n        font-size: 12px;\r\n        border-radius: 3px;\r\n        color: #fff;\r\n        background-color: #67c23a;\r\n        border-color: #67c23a;\r\n    }\r\n</style>\r\n"]}]}